{
	"compiler": {
		"version": "0.6.11+commit.5ef660b1"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token_",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "merkleRoot_",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Claimed",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes32[]",
						"name": "merkleProof",
						"type": "bytes32[]"
					}
				],
				"name": "claim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "isClaimed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "merkleRoot",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/MerkleDistributor.sol": "MerkleDistributor"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/cryptography/MerkleProof.sol": {
			"keccak256": "0x96a652802a06645a5908f74f104ec95ff0897e261e7028ee319bafc55582b597",
			"license": "MIT",
			"urls": [
				"bzz-raw://5afea8071316055c01a3d144da77523b8ae7ec8295e99559000cb07b23b98d30",
				"dweb:/ipfs/QmX14dHGgyErJb3R7wSNBSgxLdyX6EAVwJsZ6yK1xyG1Mo"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385",
			"license": "MIT",
			"urls": [
				"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017",
				"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5"
			]
		},
		"localhost/contracts/MerkleDistributor.sol": {
			"keccak256": "0xc15a3614fa5d88100514f1613eaef9cf7e42090329ca295a349ad5153d90feb7",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://ad21f85da67f8ef5bc19220832ed13d13c3a69acf1d4d396f34e4790813a7e1e",
				"dweb:/ipfs/QmT5HD5mFEzZ3niKg4QziWCYTe7nSu12917j48AsxMde4S"
			]
		},
		"localhost/contracts/interfaces/IMerkleDistributor.sol": {
			"keccak256": "0x8cd6f78943994972a4c670ab91894a82bd9ed629c9381db6ca9d0483fe8b698f",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://621484f0c5e702f7fb421c968bda5cd8218c3915cc6d79956c2d68fb0887f280",
				"dweb:/ipfs/QmXftsLwy64Z4rFn1WoXY5cj1iuqPctA8HoeraLb3Wd4ES"
			]
		}
	},
	"version": 1
}