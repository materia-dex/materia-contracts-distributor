{
	"compiler": {
		"version": "0.6.11+commit.5ef660b1"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token_",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "merkleRoot_",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Claimed",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes32[]",
						"name": "merkleProof",
						"type": "bytes32[]"
					}
				],
				"name": "claim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "isClaimed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "merkleRoot",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/distributor/contracts/MerkleDistributor.sol": "MerkleDistributor"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/distributor/contracts/MerkleDistributor.sol": {
			"keccak256": "0xef48fb6eccbd404f5447037da21f92ff57fbc1cf49f18b6d6d96d610b7c8eeaa",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://1b4d07bc8282abe60063a52c438e7c72cce29ef557595e0dcdbdff937749e01a",
				"dweb:/ipfs/QmXWYrL12AffJS5BHAnfhix2BvW2jp27tPLxLsCQCsWa8Y"
			]
		},
		"localhost/distributor/contracts/interfaces/IERC20.sol": {
			"keccak256": "0x61db17aebc5d812c7002d15c1da954065e56abe49d64b14c034abe5604d70eb3",
			"urls": [
				"bzz-raw://b006685e753f9120469f10b09c159f222d4cb8b507a6c1f0c14ed50c883ebe66",
				"dweb:/ipfs/QmSyY7iTugbczPwfGK67etiyPULenYGzzRYbt8aabwwkUb"
			]
		},
		"localhost/distributor/contracts/interfaces/IMerkleDistributor.sol": {
			"keccak256": "0x8cd6f78943994972a4c670ab91894a82bd9ed629c9381db6ca9d0483fe8b698f",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://621484f0c5e702f7fb421c968bda5cd8218c3915cc6d79956c2d68fb0887f280",
				"dweb:/ipfs/QmXftsLwy64Z4rFn1WoXY5cj1iuqPctA8HoeraLb3Wd4ES"
			]
		},
		"localhost/distributor/contracts/libraries/MerkleProof.sol": {
			"keccak256": "0xe2d865f36cab412c8d8b778641d2e55e88aed07203c5f8bab0f6d51bac34edf2",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b18b4487b9d9218bd83bdd89cc19647e6ebd01702a8a225d21916d5efb06495",
				"dweb:/ipfs/QmcdLnQQEFpkG84NzxT6urnxPqrs1e19ETFAPwkBTPmUby"
			]
		}
	},
	"version": 1
}